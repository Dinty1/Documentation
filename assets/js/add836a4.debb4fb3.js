"use strict";(self.webpackChunkdiscordsrv_documentation=self.webpackChunkdiscordsrv_documentation||[]).push([[284],{3908:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>n,metadata:()=>t,toc:()=>h});var d=s(4848),i=s(8453);const n={},l="Placeholders",t={id:"ascension/placeholders",title:"Placeholders",description:"DiscordSRV contains many placeholders which allows you to customise messages entirely to your liking.",source:"@site/docs/ascension/placeholders.md",sourceDirName:"ascension",slug:"/ascension/placeholders",permalink:"/ascension/placeholders",draft:!1,unlisted:!1,editUrl:"https://github.com/DiscordSRV/DiscordSRV/docs/ascension/placeholders.md",tags:[],version:"current",frontMatter:{},sidebar:"ascensionSidebar",previous:{title:"Security",permalink:"/ascension/security"}},c={},h=[{value:"Checking for empty placeholders",id:"checking-for-empty-placeholders",level:2},{value:"Placeholder Suffixes",id:"placeholder-suffixes",level:2},{value:"Recursive Placeholders",id:"recursive-placeholders",level:2},{value:"User",id:"user",level:2},{value:"Member",id:"member",level:2},{value:"Message",id:"message",level:2},{value:"Role",id:"role",level:2},{value:"Channel",id:"channel",level:2},{value:"Guild",id:"guild",level:2},{value:"Global",id:"global",level:2},{value:"Player",id:"player",level:2},{value:"(Useful) Formatting characters",id:"useful-formatting-characters",level:3},{value:"Discord timestamp formatting",id:"discord-timestamp-formatting",level:2},{value:"Styles",id:"styles",level:3}];function o(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.h1,{id:"placeholders",children:"Placeholders"}),"\n",(0,d.jsx)(r.p,{children:"DiscordSRV contains many placeholders which allows you to customise messages entirely to your liking."}),"\n",(0,d.jsx)(r.p,{children:"Information about which placeholders can be used where can be found in the config."}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h1,{id:"formatting",children:"Formatting"}),"\n",(0,d.jsxs)(r.admonition,{title:"General Formatting Help",type:"info",children:[(0,d.jsxs)(r.p,{children:["Information on formatting Minecraft messages can be found ",(0,d.jsx)(r.a,{href:"https://github.com/Vankka/EnhancedLegacyText/wiki/Format",children:"here"}),"."]}),(0,d.jsxs)(r.p,{children:["Information on Discord markdown can be found ",(0,d.jsx)(r.a,{href:"https://support.discord.com/hc/en-us/articles/210298617",children:"here"})]})]}),"\n",(0,d.jsx)(r.h2,{id:"checking-for-empty-placeholders",children:"Checking for empty placeholders"}),"\n",(0,d.jsx)(r.p,{children:"You can take empty placeholders into account and use an alternate placeholder instead."}),"\n",(0,d.jsxs)(r.p,{children:["For example ",(0,d.jsx)(r.code,{children:"%player_meta_prefix|player_prefix%"}),". This first looks for ",(0,d.jsx)(r.code,{children:"%player_meta_prefix%"})," if that is empty, than ",(0,d.jsx)(r.code,{children:"%player_prefix%"})," is used instead."]}),"\n",(0,d.jsx)(r.h2,{id:"placeholder-suffixes",children:"Placeholder Suffixes"}),"\n",(0,d.jsx)(r.p,{children:"Placeholders which provide a list of items can have a suffix set between each item to separate them."}),"\n",(0,d.jsxs)(r.p,{children:["For example ",(0,d.jsx)(r.code,{children:"%user_roles:', '%"}),", lists the users roles seperated by a comma and a space (",(0,d.jsx)(r.code,{children:"', '"}),")."]}),"\n",(0,d.jsx)(r.h2,{id:"recursive-placeholders",children:"Recursive Placeholders"}),"\n",(0,d.jsx)(r.p,{children:"Recursive placeholders are a special type of placeholder which allow you to specify what information you want from it."}),"\n",(0,d.jsxs)(r.p,{children:["In this example we will be using ",(0,d.jsx)(r.code,{children:"%user_highest_role_<role>%"}),". The ",(0,d.jsx)(r.code,{children:"%user_highest_role_"})," part returns the highest role of the user and turns it into a ",(0,d.jsx)(r.a,{href:"#role",children:"role placeholder"}),"."]}),"\n",(0,d.jsxs)(r.p,{children:["You can then use any ",(0,d.jsx)(r.a,{href:"#role",children:"role"})," related placeholders. For example ",(0,d.jsx)(r.code,{children:"%user_highest_role_name%"})," will return the highest roles name, or ",(0,d.jsx)(r.code,{children:"%user_highest_role_color%"})," returns the color of the highest role."]}),"\n",(0,d.jsx)(r.p,{children:"This same premise is used for all the re lookup placeholders."}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h1,{id:"discord",children:"Discord"}),"\n",(0,d.jsx)(r.h2,{id:"user",children:"User"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_name%"})," - The username of the Discord user"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_effective_name%"})," -The effective display name of the Discord user"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_discriminator%"})," - The user's discriminator"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_avatar_url%"})," - The Discord user's avatar (if they do not have one set, this will be empty)"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_effective_avatar_url%"})," - The Discord user's avatar that is currently active (if they do not have one set, this will provide the default Discord avatar)"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_tag%"})," - The Discord user's username, including discriminator if they have one"]}),"\n",(0,d.jsx)(r.h2,{id:"member",children:"Member"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_effective_server_name%"})," - The nickname name of this Discord server member"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_effective_server_avatar_url%"})," - The avatar url that that is active for this server member"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_color%"})," - The color of the user's highest role that has a color"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_isboosting%"})," - Whether this member is currently boosting the server"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_highest_role_<role>%"})," - The highest role of the member. Replace ",(0,d.jsx)(r.code,{children:"<role>"})," with any of the ",(0,d.jsx)(r.a,{href:"#role",children:"role"})," placeholders. More information about recursive placeholders ",(0,d.jsx)(r.a,{href:"#recursive-placeholders",children:"here"})]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_hoisted_role_<role>%"})," - The highest hoisted role of the member. Replace ",(0,d.jsx)(r.code,{children:"<role>"})," with any of the ",(0,d.jsx)(r.a,{href:"#role",children:"role"}),". More information about recursive placeholders ",(0,d.jsx)(r.a,{href:"#recursive-placeholders",children:"here"})]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%user_roles%"})," - The roles of the member. This placeholder supports a suffix to be set, more information can be found ",(0,d.jsx)(r.a,{href:"#placeholder-suffixes",children:"here"})]}),"\n",(0,d.jsx)(r.h2,{id:"message",children:"Message"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%message_jump_url%"})," - The URL to jump to this message"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%message_reply%"})," - The format for messages which contain a reply. This can be edited in the config"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%message_attachments%"})," - The attachments in the message sent. This placeholder supports a suffix to be set, more information can be found ",(0,d.jsx)(r.a,{href:"#placeholder-suffixes",children:"here"})]}),"\n",(0,d.jsx)(r.h2,{id:"role",children:"Role"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%role_name%"})," - The name of the Discord role"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%role_color%"})," - The color of the Discord role"]}),"\n",(0,d.jsx)(r.h2,{id:"channel",children:"Channel"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%channel_name%"})," - The name of the channel"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%channel_jump_url%"})," - The jump url of the channel"]}),"\n",(0,d.jsx)(r.h2,{id:"guild",children:"Guild"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%server_name%"})," - The name of the Discord guild"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%server_member_count%"})," - The member count of the guild"]}),"\n",(0,d.jsx)(r.h2,{id:"global",children:"Global"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%discord_invite%"})," - The invite of your Discord server (this is either provided by you in the config, or DiscordSRV auto generates it for you)"]}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h1,{id:"minecraft",children:"Minecraft"}),"\n",(0,d.jsx)(r.h2,{id:"player",children:"Player"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%player_name%"})," - The username of the Minecraft player"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%player_uuid%"})," - The UUID of the Minecraft player"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%player_uuid_nodashes%"})," - The UUID of the Minecraft player without any dashes"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%player_texture%"})," - The texture of the Minecraft player (not implemented yet)"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%player_avatar_url%"})," - The avatar url of the Minecraft player (the API used for this can be changed in the config)"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%player_meta_prefix%"})," - The meta prefix of the Minecraft player (set using the meta key ",(0,d.jsx)(r.code,{children:"discordsrv_prefix"}),")"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%player_meta_suffix%"})," - The meta suffix of the Minecraft player (set using the meta key ",(0,d.jsx)(r.code,{children:"discordsrv_suffix"}),")"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%player_prefix%"})," - The prefix of the Minecraft player"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%player_suffix%"})," - The suffix of the Minecraft player"]}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h1,{id:"global-placeholders",children:"Global placeholders"}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"%text:'<text>'\""})," - Returns arbitrary text. An example of a use case would be changing the placeholder to custom text if it is empty. For example ",(0,d.jsx)(r.code,{children:"%player_prefix|text:'No Prefix'%"})]}),"\n",(0,d.jsx)(r.h1,{id:"date-formatting",children:"Date formatting"}),"\n",(0,d.jsxs)(r.p,{children:["Some placeholders such as ",(0,d.jsx)(r.code,{children:"log_time"})," for console lines take a time formatting string, for example: ",(0,d.jsx)(r.code,{children:"ccc HH:mm:ss zzz"})," in ",(0,d.jsx)(r.code,{children:"%log_time:'ccc HH:mm:ss zzz'%"})]}),"\n",(0,d.jsx)(r.h3,{id:"useful-formatting-characters",children:"(Useful) Formatting characters"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Symbol"}),(0,d.jsx)(r.th,{children:"Meaning"}),(0,d.jsx)(r.th,{children:"Examples"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"u"}),(0,d.jsx)(r.td,{children:"year"}),(0,d.jsx)(r.td,{children:"2004; 04"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"D"}),(0,d.jsx)(r.td,{children:"day-of-year"}),(0,d.jsx)(r.td,{children:"189"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"M/L"}),(0,d.jsx)(r.td,{children:"month-of-year"}),(0,d.jsx)(r.td,{children:"7; 07; Jul; July; J"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"d"}),(0,d.jsx)(r.td,{children:"day-of-month"}),(0,d.jsx)(r.td,{children:"10"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Q/q"}),(0,d.jsx)(r.td,{children:"quarter-of-year"}),(0,d.jsx)(r.td,{children:"3; 03; Q3; 3rd quarter"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Y"}),(0,d.jsx)(r.td,{children:"week-based-year"}),(0,d.jsx)(r.td,{children:"1996; 96"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"w"}),(0,d.jsx)(r.td,{children:"week-of-week-based-year"}),(0,d.jsx)(r.td,{children:"27"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"W"}),(0,d.jsx)(r.td,{children:"week-of-month"}),(0,d.jsx)(r.td,{children:"4"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"E"}),(0,d.jsx)(r.td,{children:"day-of-week"}),(0,d.jsx)(r.td,{children:"Tue; Tuesday; T"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"e/c"}),(0,d.jsx)(r.td,{children:"localized day-of-week"}),(0,d.jsx)(r.td,{children:"2; 02; Tue; Tuesday; T"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"F"}),(0,d.jsx)(r.td,{children:"week-of-month"}),(0,d.jsx)(r.td,{children:"3"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"a"}),(0,d.jsx)(r.td,{children:"am-pm-of-day"}),(0,d.jsx)(r.td,{children:"PM"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"K"}),(0,d.jsx)(r.td,{children:"hour-of-am-pm (0-11)"}),(0,d.jsx)(r.td,{children:"0"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"H"}),(0,d.jsx)(r.td,{children:"hour-of-day"}),(0,d.jsx)(r.td,{children:"0"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"m"}),(0,d.jsx)(r.td,{children:"minute-of-hour"}),(0,d.jsx)(r.td,{children:"30"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"s"}),(0,d.jsx)(r.td,{children:"second-of-minute"}),(0,d.jsx)(r.td,{children:"55"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"S"}),(0,d.jsx)(r.td,{children:"fraction-of-second"}),(0,d.jsx)(r.td,{children:"978"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"V"}),(0,d.jsx)(r.td,{children:"time-zone ID"}),(0,d.jsx)(r.td,{children:"America/Los_Angeles; Z; -08:30"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"z"}),(0,d.jsx)(r.td,{children:"time-zone name"}),(0,d.jsx)(r.td,{children:"Pacific Standard Time; PST"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"O"}),(0,d.jsx)(r.td,{children:"localized zone-offset"}),(0,d.jsx)(r.td,{children:"GMT+8; GMT+08:00; UTC-08:00;"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"X"}),(0,d.jsx)(r.td,{children:"zone-offset 'Z' for zero"}),(0,d.jsx)(r.td,{children:"Z; -08; -0830; -08:30; -083015; -08:30:15;"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"x"}),(0,d.jsx)(r.td,{children:"zone-offset"}),(0,d.jsx)(r.td,{children:"+0000; -08; -0830; -08:30; -083015; -08:30:15;"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Z"}),(0,d.jsx)(r.td,{children:"zone-offset"}),(0,d.jsx)(r.td,{children:"+0000; -0800; -08:00;"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html",children:"Source"})}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{})]})]})]}),"\n",(0,d.jsx)(r.h2,{id:"discord-timestamp-formatting",children:"Discord timestamp formatting"}),"\n",(0,d.jsxs)(r.p,{children:["Example: ",(0,d.jsx)(r.code,{children:"%log_time:'timestamp'%"})," or ",(0,d.jsx)(r.code,{children:"%log_time:'timestamp:t'%"})]}),"\n",(0,d.jsx)(r.h3,{id:"styles",children:"Styles"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Style"}),(0,d.jsx)(r.th,{children:"Meaning"}),(0,d.jsx)(r.th,{children:"Example"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"t"}),(0,d.jsx)(r.td,{children:"Short Time"}),(0,d.jsx)(r.td,{children:"16:20"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"T"}),(0,d.jsx)(r.td,{children:"Long Time"}),(0,d.jsx)(r.td,{children:"16:20:30"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"d"}),(0,d.jsx)(r.td,{children:"Short Date"}),(0,d.jsx)(r.td,{children:"20/04/2021"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"D"}),(0,d.jsx)(r.td,{children:"Long Date"}),(0,d.jsx)(r.td,{children:"20 April 2021"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"f (default)"}),(0,d.jsx)(r.td,{children:"Short Date/Time"}),(0,d.jsx)(r.td,{children:"20 April 2021 16:20"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"F"}),(0,d.jsx)(r.td,{children:"Long Date/Time"}),(0,d.jsx)(r.td,{children:"Tuesday, 20 April 2021 16:20"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"R"}),(0,d.jsx)(r.td,{children:"Relative Time"}),(0,d.jsx)(r.td,{children:"2 months ago"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.a,{href:"https://discord.com/developers/docs/reference#message-formatting-timestamp-styles",children:"Source"})}),(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{})]})]})]})]})}function a(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>l,x:()=>t});var d=s(6540);const i={},n=d.createContext(i);function l(e){const r=d.useContext(n);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),d.createElement(n.Provider,{value:r},e.children)}}}]);